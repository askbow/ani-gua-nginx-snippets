# This is a general security helper nginx config snippet
#
# Sources: https://gist.github.com/plentz/6737338
#          https://habrahabr.ru/post/252821/
#          https://habrahabr.ru/post/250023/
#          
#  Usage:  in nginx.conf
#
#  http {
#
#      <...> # some general statements
#
#      include basic.security.setup       # this file
#
#      <...> # other statements, server sections
#       } # END of http section

# don't send the nginx version number in error pages and Server header
server_tokens off;

# config to don't allow the browser to render the page inside an frame or iframe
# and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
# if you need to allow [i]frames, you can use SAMEORIGIN or even set an uri with ALLOW-FROM uri
# https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
add_header X-Frame-Options SAMEORIGIN;

# when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
# to disable content-type sniffing on some browsers.
add_header X-Content-Type-Options nosniff;

# This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
add_header X-XSS-Protection "1; mode=block";

# with Content Security Policy (CSP) enabled(and a browser that supports it
# you can tell the browser that it can only download content from the domains you explicitly allow
#add_header Content-Security-Policy-Report-Only "default-src https:; script-src https: 'unsafe-eval' 'unsafe-inline'; style-src https: 'unsafe-inline'; img-src https: data:; font-src https: data:; report-uri /csp-report";
# NOTE: this was moved to server section's tls.setup


    # login forms bruteforce limiter:
    # https://habrahabr.ru/post/250023/
    limit_req_zone $binary_remote_addr zone=login:10m  rate=15r/m;
    # requires special location statement to work, see source


